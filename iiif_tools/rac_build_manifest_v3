#!/usr/bin/env python

"""Usage:
   rac_build_manifest <identifier>
"""

from docopt import docopt
import json
import requests

from io import BytesIO
from PIL import Image
Image.MAX_IMAGE_PIXELS = 2000000000

from classes import IIIFManifest
from classes import get_digital_objects_from_ark


class RacIIIFManifest(IIIFManifest):
    """Make a v3 manifest for one of the rose and chess documents.
       e.g. https://iiif-manifest.lib.uchicago.edu/rac/0392/rac-0392.json
    """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        for object_number in get_digital_objects_from_ark(self.ark):
            with BytesIO(
                requests.get('http://ark.lib.uchicago.edu/{}/{}/file.tif'.format(
                    self.ark,
                    object_number
                )).content
            ) as f:
                self.image_sizes.append(Image.open(f).size)

    def _get_metadata(self):
        return [
            {
                'label': { 'en': [ 'Title' ] },
                'value': { 'en': [ self.title ] }
            },
            {
                'label': { 'en': [ 'Identifier' ] },
                'value': { 'en': [ self.identifier ] }
            }
        ]

if __name__ == '__main__':
    arguments = docopt(__doc__)

    arks = {
        'rac-0392': 'ark:/61001/b2hd4d25q389',
        'rac-1380': 'ark:/61001/b23w2sh1945f'
    }

    attributions = {
        'rac-0392': 'Le Jeu des échecs moralisé, University of Chicago Library MS 392, Special Collection Research Center, University of Chicago Library.',
        'rac-1380': 'Le Roman de la Rose, University of Chicago Library MS 1380, Special Collection Research Center, University of Chicago Library. Image courtesy of The Sheridan Libraries, Johns Hopkins University.'
    }

    titles = {
        'rac-0392': 'Le Jeu des échecs moralisé, University of Chicago Library MS 392',
        'rac-1380': 'Le Roman de la Rose, University of Chicago Library MS 1380'
    }

    print(
        json.dumps(
            RacIIIFManifest(
                arguments['<identifier>'],
                arks[arguments['<identifier>']],
                titles[arguments['<identifier>']],
                'Manuscript Collection from the University of Chicago.',
                attributions[arguments['<identifier>']]
            ).data(),
            indent=4,
            sort_keys=True
        )
    )
